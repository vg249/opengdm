<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.gobiiproject</groupId>
        <artifactId>parent</artifactId>
        <version>GOBII Server 2.1_2019-08-23</version>
    </parent>

    <groupId>org.gobiiproject</groupId>
    <artifactId>gobii-web</artifactId>
    <packaging>war</packaging>

    <properties>

        <!-- Generic properties -->
        <java.version>1.13</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


        <!-- Web -->
        <jsp.version>2.2</jsp.version>
        <jstl.version>1.2</jstl.version>
        <servlet.version>2.5</servlet.version>

        <!-- java-script related -->
        <grunt-plugin-version>1.5.1</grunt-plugin-version>
        <frontend-maven-plugin-version>1.8.0</frontend-maven-plugin-version>
        <node-version>v12.13.0</node-version>
        <npm-version>6.12.1</npm-version>

        <!-- distinguish between source docs that are hand-written and those that are generated by the toolchain -->
        <doc-location-source>${project.basedir}/src/main/resources/docs/source</doc-location-source>
        <doc-location-generated>${project.basedir}/src/main/resources/docs/generated</doc-location-generated>

        <maven.exec.skip>false</maven.exec.skip> <!-- default -->

    </properties>

    <repositories>
        <repository>
            <id>spring.repo</id>
            <name>spring repo</name>
            <url>http://repo.spring.io/plugins-release/</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </repository>
    </repositories>

    <dependencies>

        <!-- gobii dependencies -->
        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-api-model</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-brapi</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-model</artifactId>
        </dependency>

        <dependency>
            <groupId>org.gobiiproject</groupId>
            <artifactId>gobii-domain</artifactId>

            <!--
            **** Ideally we would want to prevent the transitive dependency of gobii-domain on gobii-dao from bringing
            **** the gobii-dao project into the web context: we always want entityaccess to the dao layer to go through the
            **** service layer (which is implemented in the domain). However, if we exclude the dependency, spring
            **** security filter chain initialization fails because the framework class that's consuming the
            **** user detail service can't get supply the user detail service with user dao class. So we're all on
            **** scout's honor to avoid accessing dao directly from anywhere but the service layer.
            -->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.gobiiproject</groupId>-->
            <!--<artifactId>gobii-dao</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.github.kongchen/swagger-maven-plugin -->
        <!-- https://mvnrepository.com/artifact/ch.netzwerg/paleo-core -->
        <!--<dependency>-->
        <!--<groupId>ch.netzwerg</groupId>-->
        <!--<artifactId>paleo-core</artifactId>-->
        <!--<version>0.11.0</version>-->
        <!--</dependency>-->


        <dependency>
            <groupId>com.github.kongchen</groupId>
            <artifactId>swagger-maven-plugin</artifactId>
            <version>3.1.7</version>
        </dependency>


        <!--Spring WEB-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <!-- Spring MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!-- Spring and Transactions -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <!--Spring ORM support-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Spring and Transactions -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
        </dependency>
        <!--Hibernate-->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.10.Final</version>
        </dependency>

        <!-- Test Artifacts -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>3.2.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
        </dependency>

        <!-- Liquibase -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>

        <!-- DBCP -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>

        <!-- servlet container provided dependencies -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
        </dependency>

        <!-- Jackson JSON Processor -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Jackson JSON Mapper -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>

        <!-- CSV Processor -->
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- UPLOADS -->
        <!-- Apache Commons FileUpload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>0.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>1.22</version>
        </dependency>

        <!-- To resolve jaxb exception with java 13 upgrade -->
        <!-- https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j -->
        <!-- API, java.xml.bind module -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!-- Runtime, com.sun.xml.bind module -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <version>5.3.6.Final</version>
        </dependency>



    </dependencies>

    <build>
        <finalName>gobii-web</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.1.3.v20140225</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
            <groupId>pl.allegro</groupId>
            <artifactId>grunt-maven-plugin</artifactId>
            <version>${grunt-plugin-version}</version>
            <configuration>
                <gruntBuildDirectory>${project.build.directory}/grunt</gruntBuildDirectory>
            </configuration>
            </plugin>

            <!-- Replacing deprecated grunt-maven-plugin with front-end-maven-plugin
                https://github.com/allegro/grunt-maven-plugin
            -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin-version}</version>

                <executions>



                    <execution>
                        <!-- optional: you don't really need execution ids,
                        but it looks nice in your build log. -->
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node-version}</nodeVersion>
                            <npmVersion>${npm-version}</npmVersion>
                            <workingDirectory>src/main/webapp</workingDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <!-- optional: The default argument is actually
                            "install", so unless you need to run some other npm command,
                            you can remove this whole <configuration> section.
                            -->
                            <workingDirectory>src/main/webapp</workingDirectory>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <skip>${maven.exec.skip}</skip>
                            <arguments>run build</arguments>
                            <workingDirectory>src/main/webapp</workingDirectory>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!--
                Copying the index.adoc (and any additional source documentation files) from the source
                folder is the first step in the toolchain for generating documentation. I have set
                the phase for the entire documentation toolchain to package because the war file has
                to exist before it begins: the swagger2markup tool reads the class file from target,
                not the java file from source. All plugins for the documentation toolchain are
                in the package phase, so they run in the order in which they are defined here.
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>prepare-package-asciidoc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!-- Copy all asciidoc SOURCE files to where the plugin will them to be;
                                again, we want to maintain the clear distinction between our hand-written
                                docs and the ones that are generated by the tools -->
                            <outputDirectory>${doc-location-generated}/asciidoc</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${doc-location-source}/asciidoc</directory>
                                    <includes>
                                        <include>index.adoc</include>
                                        <include>gobii-api.adoc</include>
                                        <include>gobii-system.adoc</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>prepare-package-finaldocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!-- copy html and pdf to distribution  -->
                            <outputDirectory>${project.build.directory}/${project.build.finalName}/docs
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${doc-location-generated}/pdf</directory>
                                    <includes>
                                        <include>gobii-api.pdf</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                                <resource>
                                    <directory>${doc-location-generated}/html</directory>
                                    <includes>
                                        <include>index.html</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- swagger-maven-plugin generates yaml from swagger annotations in controller  -->
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.8</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>org.gobiiproject.gobiiweb.controllers.GOBIIControllerV1</location>
                            </locations>
                            <outputFormats>json,yaml</outputFormats>
                            <schemes><schema>http</schema></schemes>
                            <host>api.gobii.org:8081</host>
                            <basePath>/gobii-dev</basePath>
                            <descriptionFile>${doc-location-source}/overview.txt</descriptionFile>
                            <info>
                                <title>Genomic Data Management (GDM)</title>
                                <version>1.0</version>
                                <license>
                                    <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                                    <name>Apache 2.0</name>
                                </license>
                            </info>
                            <securityDefinitions>
                                <securityDefinition>
                                    <name>basicAuth</name>
                                    <type>basic</type>
                                </securityDefinition>
                                <securityDefinition>
                                    <name>X-Auth-Token</name>
                                    <type>apiKey</type>
                                    <in>header</in>
                                </securityDefinition>
                            </securityDefinitions>
                            <swaggerDirectory>${doc-location-generated}/swagger</swaggerDirectory>
                        </apiSource>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>
                                    org.gobiiproject.gobiiweb.controllers.SampleTrackingController
                                </location>
                            </locations>
                            <outputFormats>json,yaml</outputFormats>
                            <schemes><schema>http</schema></schemes>
                            <host>cbsugobiixvm11.biohpc.cornell.edu:8081</host>
                            <basePath>/gobii-dev</basePath>
                            <descriptionFile>${doc-location-source}/overview.txt</descriptionFile>
                            <info>
                                <title>GDM Sample Tracking</title>
                                <version>1.0</version>
                                <license>
                                    <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                                    <name>Apache 2.0</name>
                                </license>
                            </info>
                            <securityDefinitions>
                                <securityDefinition>
                                    <name>basicAuth</name>
                                    <type>basic</type>
                                </securityDefinition>
                                <securityDefinition>
                                    <name>X-Auth-Token</name>
                                    <type>apiKey</type>
                                    <in>header</in>
                                </securityDefinition>
                            </securityDefinitions>
                            <swaggerDirectory>${doc-location-generated}/swagger/sampletracking</swaggerDirectory>
                        </apiSource>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>
                                    org.gobiiproject.gobiiweb.controllers.BRAPIIControllerV2
                                </location>
                            </locations>
                            <outputFormats>json,yaml</outputFormats>
                            <schemes><schema>http</schema></schemes>
                            <host>api.gobii.org:8081</host>
                            <basePath>/gobii-dev</basePath>
                            <descriptionFile>${doc-location-source}/brapi/Overview.md</descriptionFile>
                            <info>
                                <title>GDM BrAPI Web Services</title>
                                <version>2.0</version>
                                <license>
                                    <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                                    <name>Apache 2.0</name>
                                </license>
                            </info>
                            <securityDefinitions>
                                <securityDefinition>
                                    <name>basicAuth</name>
                                    <type>basic</type>
                                </securityDefinition>
                                <securityDefinition>
                                    <name>X-Auth-Token</name>
                                    <type>apiKey</type>
                                    <in>header</in>
                                </securityDefinition>
                            </securityDefinitions>
                            <swaggerDirectory>${doc-location-generated}/swagger/brapi</swaggerDirectory>
                        </apiSource>
                    </apiSources>
                </configuration>

                <dependencies>
                    <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>2.3.1</version>
                </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> <!-- swagger-maven-->
        </plugins>
    </build>
</project>
