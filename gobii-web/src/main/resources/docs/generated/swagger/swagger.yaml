---
swagger: "2.0"
info:
  description: "The GDM web service API provides a comprehensive set of RESTful methods\
    \ for accomplishing the following core tasks in the GOBii Genomic Data Management\
    \ (GDM) system. This manual explains the GDM calls complying BrAPI Genotyping\
    \ standards and its definitions..\n\n"
  version: "1.0"
  title: "Genomic Data Management (GDM)"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.gobii.org:8081"
basePath: "/gobii-dev"
tags:
- name: "Analyses"
- name: "Authentication"
- name: "ConfigSettings"
- name: "Contacts"
- name: "ControlledVocabularies"
- name: "Datasets"
- name: "Displays"
- name: "Entities"
- name: "Experiments"
- name: "Files"
- name: "Instructions"
- name: "Jobs"
- name: "Manifests"
- name: "Maps"
- name: "Markers"
- name: "Names"
- name: "Organizations"
- name: "Ping"
- name: "Platforms"
- name: "Projects"
- name: "Protocols"
- name: "Protocols.vendor"
- name: "References"
- name: "RestProfiles"
schemes:
- "http"
paths:
  /gobii/v1/analyses:
    get:
      tags:
      - "Analyses"
      summary: "List all analyses"
      description: "List of all Analysis entities."
      operationId: "getAnalyses"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      x-summary: "Analyses"
    post:
      tags:
      - "Analyses"
      summary: "Create a new analyses."
      description: "Create analysis entity for GDM system."
      operationId: "createAnalysis"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      x-tag-description: "Analyses describe the different algorithms that were applied\
        \ to the genotyping or sequence data to produce the final dataset being loaded.\
        \ Each analysis is grouped into an analysis type. The analysis types are:\
        \ calling (variant calling), cleaning, and imputation. Additional analysis\
        \ types can be added in Controlled Vocabularies"
      x-summary: "Analyses"
  /gobii/v1/analyses/{analysisId}:
    get:
      tags:
      - "Analyses"
      summary: "Get an analyses by analysesId"
      description: "Get analyses by analyses Id."
      operationId: "getAnalysisById"
      parameters:
      - name: "analysisId"
        in: "path"
        description: "ID of Analysis to be extracted."
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      x-summary: "Analyses : analysesId"
    put:
      tags:
      - "Analyses"
      summary: "Update the analyses by analysesId"
      description: "Updates the Analysis entity having the specified analysisId."
      operationId: "replaceAnalysis"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      - name: "analysisId"
        in: "path"
        description: "ID of Analysis to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      x-summary: "Analyses : analysesId"
  /gobii/v1/auth:
    post:
      tags:
      - "Authentication"
      summary: "authenticate"
      description: "The user credentials are specified in the request headers X-Username\
        \ and X-Password; the response and the response headers include the token\
        \ in the X-Auth-Token header. X-Auth-Token header and value obtained from\
        \ /auth call will be used as an API-key for the rest of the GDM calls."
      operationId: "authenticate"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      - name: "X-Username"
        in: "header"
        description: "User Identifier"
        required: true
        type: "string"
      - name: "X-Password"
        in: "header"
        description: "User password"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          headers:
            'X-Auth-Token ':
              type: "string"
              description: "API key to authenticate GDM api calls"
          schema:
            type: "string"
      x-summary: "Authentication"
  /gobii/v1/configsettings:
    get:
      tags:
      - "ConfigSettings"
      summary: "List all configuration settings."
      description: "List all configuration settings.\n+Provides generic configuration\
        \ information about the GOBii instances in a given deployment. This call does\
        \ not require authentication"
      operationId: "getConfigSettings"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeConfigSettingsDTO"
      x-summary: "ConfigSettings"
  /gobii/v1/contact-search:
    get:
      tags:
      - "Contacts"
      summary: "List all contacts from Contacts search"
      description: "List contacts for emailid, lastname, firstname, username."
      operationId: "getContactsBySearch"
      parameters:
      - name: "email"
        in: "query"
        required: false
        type: "string"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
      - name: "userName"
        in: "query"
        required: false
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
      x-summary: "ContactSearch"
  /gobii/v1/contacts:
    get:
      tags:
      - "Contacts"
      summary: "List all contacts"
      description: "List all contacts."
      operationId: "getContacts"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
      x-summary: "Contacts"
    post:
      tags:
      - "Contacts"
      summary: "Create a new contact"
      description: "Create new contact."
      operationId: "createContact"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeContactDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
      x-tag-description: "A contact is a person who can be assigned different roles\
        \ according to their system access. For example, curators can submit and extract\
        \ all projects and update CV terms."
      x-summary: "Contacts"
  /gobii/v1/contacts/{contactId}:
    get:
      tags:
      - "Contacts"
      summary: "Get a contact by contact id"
      description: "Get contacts by Contact Id."
      operationId: "getContactsById"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contacts to be extracted."
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
      x-summary: "Contacts : contactId"
    put:
      tags:
      - "Contacts"
      summary: "Update a contact by contactId"
      description: "Update contact by contact id."
      operationId: "replaceContact"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeContactDTO"
      - name: "contactId"
        in: "path"
        description: "ID of contacts to be updated."
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
      x-summary: "Contacts : contactId"
  /gobii/v1/contacts/{email}:
    get:
      tags:
      - "Contacts"
      summary: "Get contact by email id"
      description: "Get contact by email id."
      operationId: "getContactsByEmail"
      parameters:
      - name: "email"
        in: "path"
        description: "email id of contacts to be extracted."
        required: true
        type: "string"
        pattern: "[a-zA-Z-]+@[a-zA-Z-]+.[a-zA-Z-]+"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeContactDTO"
      x-summary: "Contacts : emailId"
  /gobii/v1/cvgroups/{cvGroupId}/cvs:
    get:
      tags:
      - "ControlledVocabularies"
      summary: "list"
      description: "List CV terms in CV group with cvGroupId"
      operationId: "getCvsForCvGroup"
      parameters:
      - name: "cvGroupId"
        in: "path"
        description: "ID of the CV group."
        required: true
        type: "integer"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-summary: "CvGroups.cvs"
  /gobii/v1/cvgroups/{cvGroupTypeId}:
    get:
      tags:
      - "ControlledVocabularies"
      summary: "Get a CV group by cvGroupTypeId"
      description: "Get CV group by cv group type ID"
      operationId: "getCvGroupsByType"
      parameters:
      - name: "cvGroupTypeId"
        in: "path"
        description: "ID of the cv group type"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvGroupDTO"
      x-summary: "CvGroups : cvGroupTypeId"
  /gobii/v1/cvgroups/{groupName}:
    get:
      tags:
      - "ControlledVocabularies"
      summary: "Get a CV group by groupName"
      description: "Get CV group by name"
      operationId: "getCvGroupDetails"
      parameters:
      - name: "groupName"
        in: "path"
        description: "name of the cv group to be extracted"
        required: true
        type: "string"
        pattern: "[a-zA-Z_]+"
      - name: "cvGroupTypeId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvGroupDTO"
      x-summary: "CvGroups : groupName"
  /gobii/v1/cvs:
    get:
      tags:
      - "ControlledVocabularies"
      summary: "List all CVs"
      description: "List all cvs in the GDM."
      operationId: "getCvs"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-summary: "Cvs"
    post:
      tags:
      - "ControlledVocabularies"
      summary: "Create a new Controlled Vocabulary"
      description: "Creates new cv's."
      operationId: "createCv"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeCvDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-tag-description: "Edit property fields and type fields in the Controlled Vocabulary\
        \ tables. Property fields are identified by the suffix '_prop.' These are\
        \ additional, user-defined fields associated with database tables. Type fields\
        \ are identified by the suffix '_type.' These control the entries being loaded\
        \ to a field and require an exact match. "
      x-summary: "Cvs"
  /gobii/v1/cvs/{cvId}:
    get:
      tags:
      - "ControlledVocabularies"
      summary: "Get a CV by cvId"
      description: "Get cv by the id."
      operationId: "getCvById"
      parameters:
      - name: "cvId"
        in: "path"
        description: "ID of the CV to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-summary: "Cvs : cvId"
    put:
      tags:
      - "ControlledVocabularies"
      summary: "Update a CV by cvId"
      description: "Update cv by cvId."
      operationId: "replaceCv"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeCvDTO"
      - name: "cvId"
        in: "path"
        description: "ID of the CV to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-summary: "Cvs : cvId"
    delete:
      tags:
      - "ControlledVocabularies"
      summary: "Delete a CV by cvId"
      description: "Deletes cv by id."
      operationId: "deleteCv"
      parameters:
      - name: "cvId"
        in: "path"
        description: "ID of cv to be deleted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-summary: "Cvs : cvId"
  /gobii/v1/cvs/{groupName}:
    get:
      tags:
      - "ControlledVocabularies"
      summary: "List all CVs in a given groupName"
      description: "List cvs by the group name."
      operationId: "getCvsByGroupName"
      parameters:
      - name: "groupName"
        in: "path"
        description: "name of cv group to be extracted"
        required: true
        type: "string"
        pattern: "[a-zA-Z_]+"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeCvDTO"
      x-summary: "Cvs : groupName"
  /gobii/v1/datasets:
    get:
      tags:
      - "Datasets"
      summary: "List all datasets"
      description: "List all the existing datasets in the system. The list can be\
        \ retrieved by page and specific page size."
      operationId: "getDataSets"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "Specify the custom page size"
        required: true
        type: "integer"
        format: "int32"
      - name: "pageNo"
        in: "query"
        description: "Retrieve the specified page by number"
        required: true
        type: "integer"
        format: "int32"
      - name: "queryId"
        in: "query"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      x-summary: "Datasets"
    post:
      tags:
      - "Datasets"
      summary: "Create a new dataset"
      description: "Creates a new dataset in the system."
      operationId: "createDataSet"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      x-tag-description: "In a Dataset, you can define the suite of analyses applied\
        \ to the data to generate the dataset"
      x-summary: "Datasets"
  /gobii/v1/datasets/types:
    get:
      tags:
      - "Datasets"
      summary: "List of types of datasets"
      description: "Lists dataset types in the system."
      operationId: "getDataSetsTypes"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeNameIdDTO"
      x-summary: "Datasets.types"
  /gobii/v1/datasets/types/{id}:
    get:
      tags:
      - "Datasets"
      summary: "Get datasets by type id"
      description: "Gets the Dataset type by type ID."
      operationId: "getDataSetsByTypeId"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the dataset type"
        required: true
        type: "integer"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      x-summary: "Datasets.types : id"
  /gobii/v1/datasets/{dataSetId}:
    get:
      tags:
      - "Datasets"
      summary: "Get dataset by datasetId"
      description: "Gets the Dataset entity having the specified ID."
      operationId: "getDataSetsById"
      parameters:
      - name: "dataSetId"
        in: "path"
        description: "ID of the Dataset to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      x-summary: "Datasets : dataSetId"
    put:
      tags:
      - "Datasets"
      summary: "Update/Replace a dataset by datasetId"
      description: "Updates the Dataset entity having the specified datasetId."
      operationId: "replaceDataSet"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      - name: "dataSetId"
        in: "path"
        description: "ID of the Dataset to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDataSetDTO"
      x-summary: "Datasets : dataSetId"
  /gobii/v1/datasets/{dataSetId}/analyses:
    get:
      tags:
      - "Datasets"
      summary: "List all analyses in a dataset with given datasetId"
      description: "Lists all the analysis in a dataset identified by dataset id."
      operationId: "getAnalysesForDataset"
      parameters:
      - name: "dataSetId"
        in: "path"
        description: "ID of the dataset"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeAnalysisDTO"
      x-summary: "Datasets.analyses"
  /gobii/v1/datasets/{datasetId}/jobs:
    get:
      tags:
      - "Datasets"
      summary: "List all jobs for a dataset with datasetId"
      description: "List information for active job for a given datasetId"
      operationId: "getJobDetailsByDatasetId"
      parameters:
      - name: "datasetId"
        in: "path"
        description: "ID of the dataset"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Datasets.jobs"
  /gobii/v1/displays:
    get:
      tags:
      - "Displays"
      summary: "List all displays"
      description: "Lists all Displays in GDM"
      operationId: "getDisplays"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDisplayDTO"
      x-summary: "Displays"
    post:
      tags:
      - "Displays"
      summary: "Create a new display"
      description: "Creates displays in GDM."
      operationId: "createDisplay"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeDisplayDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDisplayDTO"
      x-summary: "Displays"
  /gobii/v1/displays/{displayId}:
    get:
      tags:
      - "Displays"
      summary: "Get a display by displayId"
      description: "Get the Display by display Id"
      operationId: "getDisplayById"
      parameters:
      - name: "displayId"
        in: "path"
        description: "ID of the Display to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDisplayDTO"
      x-summary: "Displays : displayId"
    put:
      tags:
      - "Displays"
      summary: "Update a display with displayId"
      description: "Updates the Display entity having the specified displayId."
      operationId: "replaceDisplay"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeDisplayDTO"
      - name: "displayId"
        in: "path"
        description: "ID of the Display to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeDisplayDTO"
      x-summary: "Displays : displayId"
  /gobii/v1/entities:
    get:
      tags:
      - "Entities"
      summary: "List all entities"
      description: "Lists all the existing entities in the system."
      operationId: "getAllEntityStats"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeEntityStatsDTO"
      x-summary: "Entities"
  /gobii/v1/entities/{entityNameParent}/{parentId}/{entityNameChild}/count:
    get:
      tags:
      - "Entities"
      summary: "Get entity count for a given entity child"
      description: "Retrieves the total count of the children for the given entity"
      operationId: "getEntityCountOfChildren"
      parameters:
      - name: "entityNameParent"
        in: "path"
        description: "Name of the parent entity"
        required: true
        type: "string"
      - name: "parentId"
        in: "path"
        description: "ID of the parent entity"
        required: true
        type: "integer"
        format: "int32"
      - name: "entityNameChild"
        in: "path"
        description: "Name of the child entity"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeEntityStatsDTO"
      x-summary: "Child.count"
  /gobii/v1/entities/{entityName}/count:
    get:
      tags:
      - "Entities"
      summary: "Get count for a given entity"
      description: "Gets the total Entity count for the given entityName"
      operationId: "getEntityCount"
      parameters:
      - name: "entityName"
        in: "path"
        description: "Name of the Entity"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeEntityStatsDTO"
      x-summary: "Entities.count"
  /gobii/v1/entities/{entityName}/lastmodified:
    get:
      tags:
      - "Entities"
      summary: "Get last modified date of an entity"
      description: "Gets last modified Entity for the given entityName"
      operationId: "getEntityLastModified"
      parameters:
      - name: "entityName"
        in: "path"
        description: "Name of the Entity"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeEntityStatsDTO"
      x-summary: "Entities.lastModified"
  /gobii/v1/experiments:
    get:
      tags:
      - "Experiments"
      summary: "List all experiments"
      description: "List all the existing experiments in the system."
      operationId: "getExperiments"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeExperimentDTO"
      x-summary: "Experiments"
    post:
      tags:
      - "Experiments"
      summary: "Create a new experiment"
      description: "Creates a new experiment in the system."
      operationId: "createExperiment"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeExperimentDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeExperimentDTO"
      x-tag-description: "An experiment defines the protocol and vendor used to generate\
        \ the genotyping data. More than one experiment can belong to a project."
      x-summary: "Experiments"
  /gobii/v1/experiments/{experimentId}:
    get:
      tags:
      - "Experiments"
      summary: "Get a experiment by experimentId"
      description: "Gets the Experiment entity having the specified ID."
      operationId: "getExperimentsById"
      parameters:
      - name: "experimentId"
        in: "path"
        description: "ID of the Experiment to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeExperimentDTO"
      x-summary: "Experiments : experimentId"
    put:
      tags:
      - "Experiments"
      summary: "Update an experiment by experimentId"
      description: "Updates the Experiment entity having the specified experimentId."
      operationId: "replaceExperiment"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeExperimentDTO"
      - name: "experimentId"
        in: "path"
        description: "ID of the Experiment to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeExperimentDTO"
      x-summary: "Experiments : experimentId"
  /gobii/v1/experiments/{experimentId}/protocols:
    get:
      tags:
      - "Experiments"
      summary: "List all protocols for a given experimentId"
      description: "Retrieves all the protocols having the specified experimentId\
        \ in the system."
      operationId: "getProtocolByExperimentId"
      parameters:
      - name: "experimentId"
        in: "path"
        description: "ID of the Experiment"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      x-summary: "Experiments.protocols"
  /gobii/v1/files/loader/{directoryName}:
    get:
      tags:
      - "Files"
      summary: "List of loader files in a given directory"
      description: "Gets file preview for the specified directory name"
      operationId: "getFilePreviewBySearch"
      parameters:
      - name: "directoryName"
        in: "path"
        description: "Name of the directory"
        required: true
        type: "string"
      - name: "fileFormat"
        in: "query"
        description: "Format/Extension of the file"
        required: false
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeLoaderFilePreviewDTO"
      x-summary: "Loader : directoryName"
    put:
      tags:
      - "Files"
      summary: "Add a loader file to given directory"
      description: "Updates a directory in the system that will be used for storing\
        \ the data files for loading"
      operationId: "createLoaderFileDirectory"
      parameters:
      - name: "directoryName"
        in: "path"
        description: "Name of the directory/folder"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeLoaderFilePreviewDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeLoaderFilePreviewDTO"
      x-summary: "Loader : directoryName"
  /gobii/v1/files/{destinationType}:
    post:
      tags:
      - "Files"
      summary: "Upload a file to given destination"
      description: "Uploads an arbitrary file to the specified destination"
      operationId: "uploadFile"
      parameters:
      - name: "destinationType"
        in: "path"
        description: "Destination type where the file will be uploaded to"
        required: true
        type: "string"
      - name: "fileName"
        in: "query"
        description: "Name of the file to be uploaded"
        required: true
        type: "string"
      - name: "file"
        in: "query"
        description: "The file to be uploaded"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
      x-summary: "Files : destinationType"
    delete:
      tags:
      - "Files"
      summary: "Detele a file by destination type"
      description: "Deletes an arbitrary file from the specified destination"
      operationId: "deleteFile"
      produces:
      - "text/plain"
      parameters:
      - name: "destinationType"
        in: "path"
        description: "Destination type where the file will be delete from"
        required: true
        type: "string"
      - name: "fileName"
        in: "query"
        description: "Name of the file to be deleted"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
      x-summary: "Files : destinationType"
  /gobii/v1/files/{gobiiJobId}/{destinationType}:
    get:
      tags:
      - "Files"
      summary: "Download a job file from a given destination type"
      description: "Downloads the specified file for a specific job from the specified\
        \ directory"
      operationId: "downloadJobFile"
      parameters:
      - name: "gobiiJobId"
        in: "path"
        description: "ID of the Job"
        required: true
        type: "string"
      - name: "destinationType"
        in: "path"
        description: "Destination type where the file will be downloaded from"
        required: true
        type: "string"
      - name: "fileName"
        in: "query"
        description: "Name of the file to be downloaded"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InputStreamResource"
      x-summary: "Jobs : destinationType"
    post:
      tags:
      - "Files"
      summary: "Upload a file for a given job and destination type"
      description: "Uploads the specified file for a specific job to the specified\
        \ directory"
      operationId: "uploadJobFile"
      parameters:
      - name: "gobiiJobId"
        in: "path"
        description: "ID of the Job that the file will be associated to"
        required: true
        type: "string"
      - name: "destinationType"
        in: "path"
        description: "Destination type where the file will be uploaded to"
        required: true
        type: "string"
      - name: "fileName"
        in: "query"
        description: "Name of the file"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      - name: "file"
        in: "query"
        description: "The file to be uploaded"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
      x-summary: "Jobs : destinationType"
  /gobii/v1/instructions/extractor:
    post:
      tags:
      - "Instructions"
      summary: "Create an extractor instruction file"
      description: "Creates extractor instruction file and then submits a new Job."
      operationId: "createExtractorInstruction"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeExtractorInstructionFilesDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeExtractorInstructionFilesDTO"
      x-summary: "Extractor"
  /gobii/v1/instructions/extractor/jobs/{jobName}:
    get:
      tags:
      - "Instructions"
      summary: "Get extractor job status by jobName"
      description: "Retrieves the extract job status along with other job details\
        \ having the specified Job Name."
      operationId: "getExtractorInstructionStatus"
      parameters:
      - name: "jobName"
        in: "path"
        description: "Name of the job"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Extractor.jobs : jobName"
  /gobii/v1/instructions/extractor/{instructionFileName}:
    get:
      tags:
      - "Instructions"
      summary: "Download an extractor instructor file"
      description: "Retrieves the extractor instruction file entity having the specified\
        \ instruction file name."
      operationId: "getExtractorInstruction"
      parameters:
      - name: "instructionFileName"
        in: "path"
        description: "Name of the instruction file to be retrieved"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeExtractorInstructionFilesDTO"
      x-summary: "Extractor : instructionFileName"
  /gobii/v1/instructions/loader:
    post:
      tags:
      - "Instructions"
      summary: "Create loader instruction file"
      description: "Creates loader instruction file and then submits a new Job."
      operationId: "createLoaderInstruction"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeLoaderInstructionFilesDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeLoaderInstructionFilesDTO"
      x-summary: "Loader"
  /gobii/v1/instructions/loader/jobs/{jobName}:
    get:
      tags:
      - "Instructions"
      summary: "Get loader job status by job name"
      description: "Gets the loading job status along with other job details having\
        \ the specified Job Name."
      operationId: "getLoaderInstructionStatus"
      parameters:
      - name: "jobName"
        in: "path"
        description: "Name of the job"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Loader.jobs : jobName"
  /gobii/v1/instructions/loader/{instructionFileName}:
    get:
      tags:
      - "Instructions"
      summary: "Get a loader instruction file"
      description: "Gets the loader instruction file entity having the specified instruction\
        \ file name."
      operationId: "getLoaderInstruction"
      parameters:
      - name: "instructionFileName"
        in: "path"
        description: "Name of the instruction file to be retrieved."
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeLoaderInstructionFilesDTO"
      x-summary: "Loader : instructionFileName"
  /gobii/v1/jobs:
    get:
      tags:
      - "Jobs"
      summary: "List all jobs"
      description: "Lists all the existing jobs in the system."
      operationId: "getStatus"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Jobs"
    post:
      tags:
      - "Jobs"
      summary: "Create a new job"
      description: "Creates a new job in the system."
      operationId: "createJob"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeJobDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Jobs"
  /gobii/v1/jobs/dnasamples/{jobName}:
    post:
      tags:
      - "Jobs"
      summary: "Create DNA samples for a given job"
      description: "Creates DNA samples for a given Job having the specified name\
        \ in the system."
      operationId: "submitDnaSamplesByJobName"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeDnaSampleDTO"
      - name: "jobName"
        in: "path"
        description: "Name of the Job that the DNA samples will be added to"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "DnaSamples : jobName"
  /gobii/v1/jobs/{jobName}:
    get:
      tags:
      - "Jobs"
      summary: "Get job details by job name"
      description: "Gets the Job entity having the specified name."
      operationId: "getStatusById"
      parameters:
      - name: "jobName"
        in: "path"
        description: "Name of the Job to be extracted"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Jobs : jobName"
    put:
      tags:
      - "Jobs"
      summary: "Update a job by jobName"
      description: "Updates the Job entity having the specified jobName."
      operationId: "replaceStatus"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeJobDTO"
      - name: "jobName"
        in: "path"
        description: "Name of the Job to be updated"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeJobDTO"
      x-summary: "Jobs : jobName"
  /gobii/v1/manifests:
    get:
      tags:
      - "Manifests"
      summary: "List all manifests"
      description: "Lists an unfiltered list of all Manifest entities."
      operationId: "getManifests"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeManifestDTO"
      x-summary: "Manifests"
    post:
      tags:
      - "Manifests"
      summary: "Create a manifest"
      description: "Creates a Manifest entity for GOBii system."
      operationId: "createManifest"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeManifestDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeManifestDTO"
      x-tag-description: "A fixed set of markers that run in a single reaction. Use\
        \ the manifest to extract data by the manifest name, rather than listing the\
        \ markers contained in the manifest."
      x-summary: "Manifests"
  /gobii/v1/manifests/{manifestId}:
    get:
      tags:
      - "Manifests"
      summary: "Get manifests by manifestId"
      description: "Gets the Manifest entity having the specified ID."
      operationId: "getManifestById"
      parameters:
      - name: "manifestId"
        in: "path"
        description: "ID of the Manifest to be retrieved"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeManifestDTO"
      x-summary: "Manifests : manifestId"
    put:
      tags:
      - "Manifests"
      summary: "Update a manifest"
      description: "Updates the Manifest entity having the specified manifestId."
      operationId: "replaceManifest"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeManifestDTO"
      - name: "manifestId"
        in: "path"
        description: "ID of the Manifest to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeManifestDTO"
      x-summary: "Manifests : manifestId"
  /gobii/v1/maps:
    get:
      tags:
      - "Maps"
      summary: "List all mapsets"
      description: "Lists all the existing Mapsets in the system."
      operationId: "getMaps"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      x-tag-description: "A mapset describes distances between markers and their association\
        \ to linkage groups or chromosomes. A marker can belong to, or be mapped to,\
        \ one or multiple mapsets."
      x-summary: "Maps"
  /gobii/v1/mapsets:
    get:
      tags:
      - "Maps"
      summary: "List all mapsets"
      description: "List all the existing mapsets in the system."
      operationId: "getMapsets"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      x-summary: "Mapsets"
    post:
      tags:
      - "Maps"
      summary: "Create a new Mapset"
      description: "Creates a new mapset in the system."
      operationId: "createMapset"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      x-tag-description: "A mapset describes distances between markers and their association\
        \ to linkage groups or chromosomes. A marker can belong to, or be mapped to,\
        \ one or multiple mapsets."
      x-summary: "Mapsets"
  /gobii/v1/mapsets/{mapsetId}:
    get:
      tags:
      - "Maps"
      summary: "Get mapsets by mapsetId"
      description: "Gets the Mapset entity having the specified ID."
      operationId: "getMapsetById"
      parameters:
      - name: "mapsetId"
        in: "path"
        description: "ID of the Mapset to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      x-summary: "Mapsets : mapsetId"
    put:
      tags:
      - "Maps"
      summary: "Update a mapset by mapsetId"
      description: "Updates the Mapset entity having the specified mapsetId."
      operationId: "replaceMapset"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      - name: "mapsetId"
        in: "path"
        description: "ID of the Mapset to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMapsetDTO"
      x-summary: "Mapsets : mapsetId"
  /gobii/v1/marker-search:
    get:
      tags:
      - "Markers"
      summary: "List all markers from markers search"
      description: "List Marker search results."
      operationId: "getMarkerByName"
      parameters:
      - name: "name"
        in: "query"
        description: "Name of the marker"
        required: true
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      x-summary: "MarkerSearch"
  /gobii/v1/markergroups:
    get:
      tags:
      - "Markers"
      summary: "List all markergroups"
      description: "Lists all the existing marker groups in the system."
      operationId: "getMarkerGroups"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerGroupDTO"
      x-summary: "MarkerGroups"
    post:
      tags:
      - "Markers"
      summary: "Create a new Marker group"
      description: "Creates a new marker group in the system."
      operationId: "createMarkerGroup"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeMarkerGroupDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerGroupDTO"
      x-summary: "MarkerGroups"
  /gobii/v1/markergroups/{markerGroupId}:
    get:
      tags:
      - "Markers"
      summary: "Gets all markers in a given markergroup"
      description: "Retrieves the Marker Group entity having the specified ID."
      operationId: "getMarkerGroupById"
      parameters:
      - name: "markerGroupId"
        in: "path"
        description: "ID of the marker group to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerGroupDTO"
      x-summary: "MarkerGroups : markerGroupId"
    put:
      tags:
      - "Markers"
      summary: "Update a marker by markergroupId"
      description: "Updates the Marker Group entity having the specified markerGroupId."
      operationId: "replaceMarkerGroup"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeMarkerGroupDTO"
      - name: "markerGroupId"
        in: "path"
        description: "ID of the Marker Group to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerGroupDTO"
      x-summary: "MarkerGroups : markerGroupId"
  /gobii/v1/markers:
    get:
      tags:
      - "Markers"
      summary: "List all markers"
      description: "Lists all the existing markers in the system."
      operationId: "getMarkers"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      x-summary: "Markers"
    post:
      tags:
      - "Markers"
      summary: "Create a new marker"
      description: "Creates a new marker in the system."
      operationId: "createMarker"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      x-tag-description: "A Marker Group defines a group of markers, the marker platform,\
        \ and any optional favorable alleles for each marker."
      x-summary: "Markers"
  /gobii/v1/markers/{markerId}:
    get:
      tags:
      - "Markers"
      summary: "Get a marker by markerId"
      description: "Retrieves the Marker entity having the specified ID."
      operationId: "getMarkerById"
      parameters:
      - name: "markerId"
        in: "path"
        description: "ID of the Marker to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      x-summary: "Markers : markerId"
    put:
      tags:
      - "Markers"
      summary: "Update a marker by markerId"
      description: "Updates the Marker entity having the specified markerId."
      operationId: "replaceMarker"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      - name: "markerId"
        in: "path"
        description: "ID of the Marker to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeMarkerDTO"
      x-summary: "Markers : markerId"
  /gobii/v1/names/{entity}:
    get:
      tags:
      - "Names"
      summary: "List all NameIds"
      description: "List of name/ID combination for a given entity. For the list of\
        \ entities supported see class GobiiEntityNameType.List can further be filtered\
        \ out by specifying the filter type and value.For the list of filter types\
        \ supported see class GobiiFilterType.Example use case: entity = CV; filterType\
        \ = NAMES_BY_TYPE_NAME; filterValue = statusResult will be a list of CV terms\
        \ having status as the cv group"
      operationId: "getNames"
      parameters:
      - name: "entity"
        in: "path"
        description: "The entity to be retrieved"
        required: true
        type: "string"
      - name: "filterType"
        in: "query"
        description: "The filter type for the name list"
        required: false
        type: "string"
      - name: "filterValue"
        in: "query"
        description: "The value for the filter type"
        required: false
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeNameIdDTO"
      x-summary: "Names : entity"
    post:
      tags:
      - "Names"
      summary: "Create a new NameID"
      description: "Retrieves a list of name/ID combination for a given entity and\
        \ name list. For the list of entities supported see class GobiiEntityNameType.This\
        \ is service is specifically implemented for these filter types: NAMES_BY_NAME_LIST\
        \ - given a list of names, return the same list with the corresponding ID\
        \ in the database. If name doesn't exist, ID will be 0.NAMES_BY_NAME_LIST_RETURN_EXISTS\
        \ - given a list of names, return the list of names with ID that exists in\
        \ the database.NAMES_BY_NAME_LIST_RETURN_ABSENT - given a list of names, return\
        \ the list of names that doesn't exist in the database with 0 as the IDFilter\
        \ value varies per entity. This can be cv group name, project ID, platform\
        \ ID, etc.Example use case: entity = CV; filterType = NAMES_BY_NAME_LIST;\
        \ filterValue = germplasm_typeResult will be a list of CV terms with ID having\
        \ germplasm_type as the cv group"
      operationId: "getNamesByNameList"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeNameIdDTO"
      - name: "entity"
        in: "path"
        description: "The entity to be retrieved"
        required: true
        type: "string"
      - name: "filterType"
        in: "query"
        description: "The filter type for the name list"
        required: false
        type: "string"
      - name: "filterValue"
        in: "query"
        description: "The value for the filter type"
        required: false
        type: "string"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeNameIdDTO"
      x-summary: "Names : entity"
  /gobii/v1/organizations:
    get:
      tags:
      - "Organizations"
      summary: "List all organizations"
      description: "List all the existing organizations in the system."
      operationId: "getOrganizations"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-summary: "Organizations"
    post:
      tags:
      - "Organizations"
      summary: "Create a new organization"
      description: "Creates a new organization in the system."
      operationId: "createOrganization"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-tag-description: "Organization is a company or institute. Organization may\
        \ be associated with a contact in the Define Contacts page. An organization\
        \ can also describe a vendor and be associated with a protocol to create a\
        \ vendor-protocol in the Define Protocols page."
      x-summary: "Organizations"
  /gobii/v1/organizations/{organizationId}:
    get:
      tags:
      - "Organizations"
      summary: "Get organization by organizationId"
      description: "Retrieves the Organization entity having the specified ID."
      operationId: "getOrganizationsById"
      parameters:
      - name: "organizationId"
        in: "path"
        description: "ID of the Organization to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-summary: "Organizations : organizationId"
    put:
      tags:
      - "Organizations"
      summary: "Update an organization by organizationId"
      description: "Updates the Organization entity having the specified organizationId."
      operationId: "replaceOrganization"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      - name: "organizationId"
        in: "path"
        description: "ID of the Organization to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-summary: "Organizations : organizationId"
  /gobii/v1/ping:
    post:
      tags:
      - "Ping"
      summary: "ping"
      description: "Pings the GDB Web server."
      operationId: "getPingResponse"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopePingDTO"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopePingDTO"
      x-summary: "Ping"
  /gobii/v1/platforms:
    get:
      tags:
      - "Platforms"
      summary: "List all platforms"
      description: "List all the existing platforms in the system."
      operationId: "getPlatforms"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      x-summary: "Platforms"
    post:
      tags:
      - "Platforms"
      summary: "Create a new platform"
      description: "Creates a new Platform in the system."
      operationId: "createPlatform"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      x-tag-description: "The platform describes the general chemistry used to generate\
        \ marker genotyping data. Examples of platforms are KASP, Illumina, etc. All\
        \ markers must be associated with a platform.\nThere are several considerations\
        \ for defining platforms.\n1. Consistency of data generated: the expectation\
        \ is that within each platform, the genotyping data generated by a marker\
        \ name should give consistent results to allow for future composite scores\
        \ by marker. A marker that generates data using different chemistry or separation\
        \ methods would likely give different results and should be placed in separate\
        \ platforms (or given a different marker name).\n2. Avoiding unnecessary duplication\
        \ of marker names:  if five different sequencing methods each produce the\
        \ same or overlapping marker names that give equivalent genotyping scores,\
        \ they should all be placed under a single platform. For example, \"Sequencing,\"\
        \ and the five methods described using protocols. \n3. Extract requirements:\
        \ one of the primary extracts will be by   platform, and so consider how the\
        \ user will want to extract data."
      x-summary: "Platforms"
  /gobii/v1/platforms/protocols/{vendorProtocolId}:
    get:
      tags:
      - "Platforms"
      summary: "GET /platforms/protocols/{vendorProtocolId}"
      description: "Gets the Platform entity having the specified Vendor Protocol\
        \ ID."
      operationId: "getPlatformDetailsByVendorProtocolId"
      parameters:
      - name: "vendorProtocolId"
        in: "path"
        description: "ID of the vendor protocol"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      x-summary: "Protocols : vendorProtocolId"
  /gobii/v1/platforms/{platformId}:
    get:
      tags:
      - "Platforms"
      summary: "Get a platform by platformId"
      description: "Retrieves the Platform entity having the specified ID."
      operationId: "getPlatformsById"
      parameters:
      - name: "platformId"
        in: "path"
        description: "ID of the Platform to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      x-summary: "Platforms : platformId"
    put:
      tags:
      - "Platforms"
      summary: "Update a platform by platformId"
      description: "Updates the Platform entity having the specified platformId."
      operationId: "replacePlatform"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      - name: "platformId"
        in: "path"
        description: "ID of the Platform to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopePlatformDTO"
      x-summary: "Platforms : platformId"
  /gobii/v1/projects:
    get:
      tags:
      - "Projects"
      summary: "List all projects"
      description: "List all the existing projects in the system."
      operationId: "getProjects"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProjectDTO"
      x-summary: "Projects"
    post:
      tags:
      - "Projects"
      summary: "Create a new project"
      description: "Creates a new project in the system."
      operationId: "createProject"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeProjectDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProjectDTO"
      x-tag-description: "A project consists of a group of samples that are, or will\
        \ be, genotyped. A project belongs to a Principal Investigator (PI), also\
        \ called a PI contact. "
      x-summary: "Projects"
  /gobii/v1/projects/{projectId}:
    get:
      tags:
      - "Projects"
      summary: "Get a project by projectId"
      description: "Retrieves the Project entity having the specified ID."
      operationId: "getProjectsById"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of the Project to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProjectDTO"
      x-summary: "Projects : projectId"
    put:
      tags:
      - "Projects"
      summary: "Update a project by projectId"
      description: "Updates the Project entity having the specified projectId."
      operationId: "replaceProject"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeProjectDTO"
      - name: "projectId"
        in: "path"
        description: "ID of the Project to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProjectDTO"
      x-summary: "Projects : projectId"
  /gobii/v1/protocols:
    get:
      tags:
      - "Protocols"
      summary: "List all protocols"
      description: "List all the existing protocols in the system."
      operationId: "getProtocols"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      x-summary: "Protocols"
    post:
      tags:
      - "Protocols"
      summary: "Create a new protocol"
      description: "Creates a new Protocol in the system."
      operationId: "createProtocol"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      x-tag-description: "Protocols are grouped within platforms. Protocol defines\
        \ the specific method that is used to generate the genotyping data for a set\
        \ of markers within a platform. There could be minor differences in the genotyping\
        \ data generated by different protocols within the same platform, but the\
        \ data should not be substantially different for the same marker for the same\
        \ marker. Examples of protocols are different enzymes used to generate GbS\
        \ data within a sequencing platform."
      x-summary: "Protocols"
  /gobii/v1/protocols/{protocolId}:
    get:
      tags:
      - "Protocols"
      summary: "Get a protocol by protocolId"
      description: "Retrieves the Protocol entity having the specified ID."
      operationId: "getProtocol"
      parameters:
      - name: "protocolId"
        in: "path"
        description: "ID of the Protocol to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      x-summary: "Protocols : protocolId"
    put:
      tags:
      - "Protocols"
      summary: "Update a protocol by protocolId"
      description: "Updates the Protocol entity having the specified protocolId."
      operationId: "replaceProtocol"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      - name: "protocolId"
        in: "path"
        description: "ID of the Protocol to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeProtocolDTO"
      x-summary: "Protocols : protocolId"
  /gobii/v1/protocols/{protocolId}/vendors:
    get:
      tags:
      - "Protocols"
      summary: "List all vendors for a given protocolId"
      description: "List all the vendor protocols given protocolId in the system."
      operationId: "getVendorsForProtocol"
      parameters:
      - name: "protocolId"
        in: "path"
        description: "ID of the Protocol ID"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-summary: "Protocols.vendors"
    post:
      tags:
      - "Protocols.vendor"
      summary: "Create new vendors for a given protocolId"
      description: "Creates a new Vendor Protocol in the system for specified Protocol\
        \ ID."
      operationId: "addVendorToProtocol"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      - name: "protocolId"
        in: "path"
        description: "ID of the Protocol"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-tag-description: "Selection of a vendor allows for a unique combination of\
        \ the vendor and protocol to be defined. Vendor names are generated in Define\
        \ | Organization. For additional information, refer to Organizations."
      x-summary: "Protocols.vendors"
    put:
      tags:
      - "Protocols"
      summary: "Update vendors for a given protocolId"
      description: "Updates the Vendor Protocol entity having the specified protocolId."
      operationId: "updateOrReplaceVendorProtocol"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      - name: "protocolId"
        in: "path"
        description: "ID of the Protocol"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeOrganizationDTO"
      x-summary: "Protocols.vendors"
  /gobii/v1/references:
    get:
      tags:
      - "References"
      summary: "List all references"
      description: "Lists all the existing references in the system."
      operationId: "getReferences"
      parameters:
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeReferenceDTO"
      x-summary: "References"
    post:
      tags:
      - "References"
      summary: "Create a new reference"
      description: "Creates a new reference in the system."
      operationId: "createReference"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PayloadEnvelopeReferenceDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeReferenceDTO"
      x-tag-description: "The authoritative genome reference and associated linked\
        \ files for a physical mapset."
      x-summary: "References"
  /gobii/v1/references/{referenceId}:
    get:
      tags:
      - "References"
      summary: "GET /references/{referenceId}"
      description: "Gets the Reference entity having the specified ID."
      operationId: "getReferenceById"
      parameters:
      - name: "referenceId"
        in: "path"
        description: "ID of the Reference to be extracted"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeReferenceDTO"
      x-summary: "References : referenceId"
    put:
      tags:
      - "References"
      summary: "Update a reference by referenceId"
      description: "Updates the Reference entity having the specified referenceId."
      operationId: "replaceReference"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeReferenceDTO"
      - name: "referenceId"
        in: "path"
        description: "ID of the Reference to be updated"
        required: true
        type: "integer"
        pattern: "[\\d]+"
        format: "int32"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeReferenceDTO"
      x-summary: "References : referenceId"
  /gobii/v1/restprofiles:
    put:
      tags:
      - "RestProfiles"
      summary: "/restprofiles/"
      description: "Update REST profiles\nWhen the Header of the payload envelope\
        \ for a resource contains maxGet, maxPost, and maxPut values, this resource\
        \ provides a means to update the max for a given rest resource ID and for\
        \ a given HTTP verb. The values are transient in the sense that they will\
        \ be confined only to a specific web service deployment. They are stored in\
        \ the web service configurationdocument"
      operationId: "updateRestProfile"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PayloadEnvelopeRestProfileDTO"
      - name: "X-Auth-Token"
        in: "header"
        description: "Authentication Token"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PayloadEnvelopeRestProfileDTO"
      x-summary: "update"
securityDefinitions:
  X-Auth-Token:
    type: "apiKey"
    name: "X-Auth-Token"
    in: "header"
  basicAuth:
    type: "basic"
definitions:
  AnalysisDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      analysisId:
        type: "integer"
        format: "int32"
      analysisName:
        type: "string"
      analysisDescription:
        type: "string"
      anlaysisTypeId:
        type: "integer"
        format: "int32"
      program:
        type: "string"
      programVersion:
        type: "string"
      algorithm:
        type: "string"
      sourceName:
        type: "string"
      sourceVersion:
        type: "string"
      sourceUri:
        type: "string"
      referenceId:
        type: "integer"
        format: "int32"
      timeExecuted:
        type: "string"
        format: "date-time"
      statusId:
        type: "integer"
        format: "int32"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/EntityPropertyDTO"
      id:
        type: "integer"
        format: "int32"
  ConfigSettingsDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      serverConfigs:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/ServerConfigItem"
      serverCapabilities:
        type: "object"
        additionalProperties:
          type: "boolean"
      maxUploadSizeMbytes:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
  ContactDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      contactId:
        type: "integer"
        format: "int32"
      lastName:
        type: "string"
      firstName:
        type: "string"
      code:
        type: "string"
      email:
        type: "string"
      roles:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      organizationId:
        type: "integer"
        format: "int32"
      userName:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  CvDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      groupId:
        type: "integer"
        format: "int32"
      xrefId:
        type: "integer"
        format: "int32"
      entityStatus:
        type: "integer"
        format: "int32"
      term:
        type: "string"
      abbreviation:
        type: "string"
      definition:
        type: "string"
      rank:
        type: "integer"
        format: "int32"
      groupType:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      group:
        type: "integer"
        format: "int32"
      cvId:
        type: "integer"
        format: "int32"
  CvGroupDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      cvGroupId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      definition:
        type: "string"
      groupType:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
  DataSetDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      dataSetId:
        type: "integer"
        format: "int32"
      datasetName:
        type: "string"
      experimentId:
        type: "integer"
        format: "int32"
      experimentName:
        type: "string"
      projectId:
        type: "integer"
        format: "int32"
      projectName:
        type: "string"
      protocolId:
        type: "integer"
        format: "int32"
      protocolName:
        type: "string"
      platformId:
        type: "integer"
        format: "int32"
      platformName:
        type: "string"
      callingAnalysisId:
        type: "integer"
        format: "int32"
      callingAnalysisName:
        type: "string"
      piContactId:
        type: "integer"
        format: "int32"
      piEmail:
        type: "string"
      piFirstName:
        type: "string"
      piLastName:
        type: "string"
      dataTable:
        type: "string"
      dataFile:
        type: "string"
      qualityTable:
        type: "string"
      qualityFile:
        type: "string"
      statusId:
        type: "integer"
        format: "int32"
      datatypeId:
        type: "integer"
        format: "int32"
      datatypeName:
        type: "string"
      jobId:
        type: "integer"
        format: "int32"
      jobStatusId:
        type: "integer"
        format: "int32"
      jobStatusName:
        type: "string"
      jobTypeId:
        type: "integer"
        format: "int32"
      jobTypeName:
        type: "string"
      jobSubmittedDate:
        type: "string"
        format: "date-time"
      totalSamples:
        type: "integer"
        format: "int32"
      totalMarkers:
        type: "integer"
        format: "int32"
      loaderLastName:
        type: "string"
      loaderFirstName:
        type: "string"
      analysesIds:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      scores:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      id:
        type: "integer"
        format: "int32"
  DisplayDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      includeDetailsList:
        type: "boolean"
      displayId:
        type: "integer"
        format: "int32"
      tableName:
        type: "string"
      columnName:
        type: "string"
      displayName:
        type: "string"
      displayRank:
        type: "integer"
        format: "int32"
      tableNamesWithColDisplay:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/TableColDisplay"
      id:
        type: "integer"
        format: "int32"
  DnaSampleDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      dnaRunId:
        type: "integer"
        format: "int32"
      dnaSampleId:
        type: "integer"
        format: "int32"
      externalCode:
        type: "string"
      germplasmId:
        type: "integer"
        format: "int32"
      germplasmName:
        type: "string"
      analysisMethodName:
        type: "string"
      markerCount:
        type: "integer"
        format: "int32"
      dnaSampleName:
        type: "string"
      germplasmExternalCode:
        type: "string"
      projectId:
        type: "integer"
        format: "int32"
      dnaSampleNum:
        type: "integer"
        format: "int32"
      dnarunName:
        type: "string"
      experimentId:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
  EntityPropertyDTO:
    type: "object"
    properties:
      entityIdId:
        type: "integer"
        format: "int32"
      propertyId:
        type: "integer"
        format: "int32"
      propertyName:
        type: "string"
      propertyValue:
        type: "string"
  EntityStatsDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      count:
        type: "integer"
        format: "int32"
      lastModified:
        type: "string"
        format: "date-time"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      entityStateDateType:
        type: "string"
        enum:
        - "INSERT_UPDATE"
        - "INSERT_ONLY"
      id:
        type: "integer"
        format: "int32"
  ExperimentDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      experimentId:
        type: "integer"
        format: "int32"
      experimentName:
        type: "string"
      experimentCode:
        type: "string"
      experimentDataFile:
        type: "string"
      projectId:
        type: "integer"
        format: "int32"
      vendorProtocolId:
        type: "integer"
        format: "int32"
      manifestId:
        type: "integer"
        format: "int32"
      statusId:
        type: "integer"
        format: "int32"
      datasets:
        type: "array"
        items:
          $ref: "#/definitions/DataSetDTO"
      id:
        type: "integer"
        format: "int32"
  ExtractorInstructionFilesDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      jobId:
        type: "string"
      gobiiExtractorInstructions:
        type: "array"
        items:
          $ref: "#/definitions/GobiiExtractorInstruction"
      instructionFileName:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  GobiiDataSetExtract:
    type: "object"
    properties:
      gobiiFileType:
        type: "string"
        enum:
        - "HAPMAP"
        - "FLAPJACK"
        - "GENERIC"
        - "VCF"
        - "META_DATA"
      accolate:
        type: "boolean"
      gobiiJobStatus:
        type: "string"
        enum:
        - "CV_PROGRESSSTATUS_PENDING"
        - "CV_PROGRESSSTATUS_INPROGRESS"
        - "CV_PROGRESSSTATUS_COMPLETED"
        - "CV_PROGRESSSTATUS_FAILED"
        - "CV_PROGRESSSTATUS_VALIDATION"
        - "CV_PROGRESSSTATUS_DIGEST"
        - "CV_PROGRESSSTATUS_TRANSFORMATION"
        - "CV_PROGRESSSTATUS_METADATALOAD"
        - "CV_PROGRESSSTATUS_MATRIXLOAD"
        - "CV_PROGRESSSTATUS_ABORTED"
        - "CV_PROGRESSSTATUS_METADATAEXTRACT"
        - "CV_PROGRESSSTATUS_FINALASSEMBLY"
        - "CV_PROGRESSSTATUS_QCPROCESSING"
        - "CV_PROGRESSSTATUS_NOSTATUS"
      extractDestinationDirectory:
        type: "string"
      gobiiExtractFilterType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "WHOLE_DATASET"
        - "BY_MARKER"
        - "BY_SAMPLE"
      markerList:
        type: "array"
        items:
          type: "string"
      sampleList:
        type: "array"
        items:
          type: "string"
      listFileName:
        type: "string"
      gobiiDatasetType:
        $ref: "#/definitions/PropNameId"
      principleInvestigator:
        $ref: "#/definitions/PropNameId"
      project:
        $ref: "#/definitions/PropNameId"
      dataSet:
        $ref: "#/definitions/PropNameId"
      platforms:
        type: "array"
        items:
          $ref: "#/definitions/PropNameId"
      gobiiSampleListType:
        type: "string"
        enum:
        - "GERMPLASM_NAME"
        - "EXTERNAL_CODE"
        - "DNA_SAMPLE"
      markerGroups:
        type: "array"
        items:
          $ref: "#/definitions/PropNameId"
      extractedFiles:
        type: "array"
        items:
          type: "file"
      logMessage:
        type: "string"
  GobiiExtractorInstruction:
    type: "object"
    properties:
      dataSetExtracts:
        type: "array"
        items:
          $ref: "#/definitions/GobiiDataSetExtract"
      mapsetIds:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      contactId:
        type: "integer"
        format: "int32"
      contactEmail:
        type: "string"
      gobiiCropType:
        type: "string"
      qcCheck:
        type: "boolean"
  GobiiFile:
    type: "object"
    properties:
      source:
        type: "string"
      destination:
        type: "string"
      delimiter:
        type: "string"
      gobiiFileType:
        type: "string"
        enum:
        - "HAPMAP"
        - "FLAPJACK"
        - "GENERIC"
        - "VCF"
        - "META_DATA"
      requireDirectoriesToExist:
        type: "boolean"
      createSource:
        type: "boolean"
  GobiiFileColumn:
    type: "object"
    properties:
      gobiiColumnType:
        type: "string"
        enum:
        - "CSV_COLUMN"
        - "CSV_ROW"
        - "CSV_BOTH"
        - "VCF_SAMPLE"
        - "VCF_MARKER"
        - "VCF_VARIANT"
        - "VCF_METADATA"
        - "VCF_INFO"
        - "CONSTANT"
        - "AUTOINCREMENT"
        - "VCF_MARKER_POS"
      getrCoord:
        type: "integer"
        format: "int32"
      getcCoord:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      filterFrom:
        type: "string"
      filterTo:
        type: "string"
      findText:
        type: "string"
      replaceText:
        type: "string"
      constantValue:
        type: "string"
      index:
        type: "string"
      subcolumn:
        type: "boolean"
      subcolumnDelimiter:
        type: "string"
      metaDataId:
        type: "string"
  GobiiLoaderInstruction:
    type: "object"
    properties:
      table:
        type: "string"
      gobiiFileColumns:
        type: "array"
        items:
          $ref: "#/definitions/GobiiFileColumn"
  GobiiLoaderMetadata:
    type: "object"
    properties:
      project:
        $ref: "#/definitions/PropNameId"
      platform:
        $ref: "#/definitions/PropNameId"
      experiment:
        $ref: "#/definitions/PropNameId"
      datasetOrientationType:
        type: "string"
        enum:
        - "SAMPLE_FAST"
        - "MARKER_FAST"
      dataset:
        $ref: "#/definitions/PropNameId"
      datasetType:
        $ref: "#/definitions/PropNameId"
      mapset:
        $ref: "#/definitions/PropNameId"
      gobiiFile:
        $ref: "#/definitions/GobiiFile"
      gobiiCropType:
        type: "string"
      jobPayloadType:
        type: "string"
        enum:
        - "CV_PAYLOADTYPE_SAMPLES"
        - "CV_PAYLOADTYPE_MARKERS"
        - "CV_PAYLOADTYPE_MATRIX"
        - "CV_PAYLOADTYPE_MARKERSAMPLES"
        - "CV_PAYLOADTYPE_ALLMETA"
      gobiiJobStatus:
        type: "string"
        enum:
        - "CV_PROGRESSSTATUS_PENDING"
        - "CV_PROGRESSSTATUS_INPROGRESS"
        - "CV_PROGRESSSTATUS_COMPLETED"
        - "CV_PROGRESSSTATUS_FAILED"
        - "CV_PROGRESSSTATUS_VALIDATION"
        - "CV_PROGRESSSTATUS_DIGEST"
        - "CV_PROGRESSSTATUS_TRANSFORMATION"
        - "CV_PROGRESSSTATUS_METADATALOAD"
        - "CV_PROGRESSSTATUS_MATRIXLOAD"
        - "CV_PROGRESSSTATUS_ABORTED"
        - "CV_PROGRESSSTATUS_METADATAEXTRACT"
        - "CV_PROGRESSSTATUS_FINALASSEMBLY"
        - "CV_PROGRESSSTATUS_QCPROCESSING"
        - "CV_PROGRESSSTATUS_NOSTATUS"
      contactId:
        type: "integer"
        format: "int32"
      contactEmail:
        type: "string"
      qcCheck:
        type: "boolean"
  GobiiLoaderProcedure:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/GobiiLoaderMetadata"
      instructions:
        type: "array"
        items:
          $ref: "#/definitions/GobiiLoaderInstruction"
  Header:
    type: "object"
    properties:
      gobiiProcessType:
        type: "string"
        enum:
        - "CREATE"
        - "READ"
        - "UPDATE"
        - "DELETE"
        - "NONE"
      dtoHeaderAuth:
        $ref: "#/definitions/HeaderAuth"
      status:
        $ref: "#/definitions/Status"
      pagination:
        $ref: "#/definitions/Pagination"
      maxGet:
        type: "integer"
        format: "int32"
      maxPost:
        type: "integer"
        format: "int32"
      maxPut:
        type: "integer"
        format: "int32"
      gobiiVersion:
        type: "string"
      cropType:
        type: "string"
  HeaderAuth:
    type: "object"
    properties:
      userName:
        type: "string"
      password:
        type: "string"
      token:
        type: "string"
      gobiiCropType:
        type: "string"
  HeaderStatusMessage:
    type: "object"
    properties:
      gobiiStatusLevel:
        type: "string"
        enum:
        - "ERROR"
        - "VALIDATION"
        - "WARNING"
        - "INFO"
        - "OK"
      gobiiValidationStatusType:
        type: "string"
        enum:
        - "NONE"
        - "UNKNOWN"
        - "VALIDATION_COMPOUND_UNIQUE"
        - "VALIDATION_NOT_UNIQUE"
        - "NONEXISTENT_FK_ENTITY"
        - "BAD_REQUEST"
        - "MISSING_REQUIRED_VALUE"
        - "ENTITY_DOES_NOT_EXIST"
        - "ENTITY_ALREADY_EXISTS"
        - "UNKNOWN_ENUM_VALUE"
        - "RESOURCE_LIMIT"
        - "UNIQUE_KEY_VIOLATION"
      message:
        type: "string"
  InputStream:
    type: "object"
  InputStreamResource:
    type: "object"
    properties:
      inputStream:
        $ref: "#/definitions/InputStream"
      description:
        type: "string"
      open:
        type: "boolean"
      url:
        type: "string"
        format: "url"
      file:
        type: "file"
      uri:
        type: "string"
        format: "uri"
      readable:
        type: "boolean"
      filename:
        type: "string"
  JobDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      jobId:
        type: "integer"
        format: "int32"
      jobName:
        type: "string"
      type:
        type: "string"
      payloadType:
        type: "string"
      status:
        type: "string"
      message:
        type: "string"
      submittedBy:
        type: "integer"
        format: "int32"
      submittedDate:
        type: "string"
        format: "date-time"
      datasetIds:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      id:
        type: "integer"
        format: "int32"
  Link:
    type: "object"
    properties:
      href:
        type: "string"
      description:
        type: "string"
      methods:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
          - "OPTIONS"
  LinkCollection:
    type: "object"
    properties:
      linksPerDataItem:
        type: "array"
        items:
          $ref: "#/definitions/Link"
      exploreLinksPerDataItem:
        type: "array"
        items:
          type: "array"
          items:
            $ref: "#/definitions/Link"
  LoaderFilePreviewDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      id:
        type: "integer"
        format: "int32"
      directoryName:
        type: "string"
      previewFileName:
        type: "string"
      fileList:
        type: "array"
        items:
          type: "string"
      filePreview:
        type: "array"
        items:
          type: "array"
          items:
            type: "string"
  LoaderInstructionFilesDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      procedure:
        $ref: "#/definitions/GobiiLoaderProcedure"
      instructionFileName:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  ManifestDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      manifestId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      code:
        type: "string"
      filePath:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  MapsetDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      mapsetId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      code:
        type: "string"
      description:
        type: "string"
      referenceId:
        type: "integer"
        format: "int32"
      mapType:
        type: "integer"
        format: "int32"
      statusId:
        type: "integer"
        format: "int32"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/EntityPropertyDTO"
      id:
        type: "integer"
        format: "int32"
  MarkerDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      markerId:
        type: "integer"
        format: "int32"
      platformId:
        type: "integer"
        format: "int32"
      variantId:
        type: "integer"
        format: "int32"
      markerName:
        type: "string"
      platformName:
        type: "string"
      code:
        type: "string"
      ref:
        type: "string"
      alts:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      sequence:
        type: "string"
      referenceId:
        type: "integer"
        format: "int32"
      strandId:
        type: "integer"
        format: "int32"
      status:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      strand:
        type: "integer"
        format: "int32"
  MarkerGroupDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      markerGroupId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      code:
        type: "string"
      markers:
        type: "array"
        items:
          $ref: "#/definitions/MarkerGroupMarkerDTO"
      germplasmGroup:
        type: "string"
      statusId:
        type: "integer"
        format: "int32"
      markerMap:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      id:
        type: "integer"
        format: "int32"
  MarkerGroupMarkerDTO:
    type: "object"
    properties:
      gobiiProcessType:
        type: "string"
        enum:
        - "CREATE"
        - "READ"
        - "UPDATE"
        - "DELETE"
        - "NONE"
      markerExists:
        type: "boolean"
      markerId:
        type: "integer"
        format: "int32"
      markerName:
        type: "string"
      platformId:
        type: "integer"
        format: "int32"
      platformName:
        type: "string"
      favorableAllele:
        type: "string"
  NameIdDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      parameters:
        type: "object"
        additionalProperties:
          type: "object"
      entityLasetModified:
        type: "string"
        format: "date-time"
      gobiiEntityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      gobiiFkEntityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      id:
        type: "integer"
        format: "int32"
      fkId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
  OrganizationDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      organizationId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      address:
        type: "string"
      website:
        type: "string"
      statusId:
        type: "integer"
        format: "int32"
      vendorProtocols:
        type: "array"
        items:
          $ref: "#/definitions/VendorProtocolDTO"
      id:
        type: "integer"
        format: "int32"
  Pagination:
    type: "object"
    properties:
      pagedQueryId:
        type: "string"
      queryTime:
        type: "string"
        format: "date-time"
      pageSize:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      currentPage:
        type: "integer"
        format: "int32"
  Payload:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          type: "object"
  PayloadAnalysisDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/AnalysisDTO"
  PayloadConfigSettingsDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ConfigSettingsDTO"
  PayloadContactDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ContactDTO"
  PayloadCvDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CvDTO"
  PayloadCvGroupDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CvGroupDTO"
  PayloadDataSetDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/DataSetDTO"
  PayloadDisplayDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/DisplayDTO"
  PayloadDnaSampleDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/DnaSampleDTO"
  PayloadEntityStatsDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/EntityStatsDTO"
  PayloadEnvelope:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadObject"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeAnalysisDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadAnalysisDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeConfigSettingsDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadConfigSettingsDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeContactDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadContactDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeCvDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadCvDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeCvGroupDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadCvGroupDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeDataSetDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadDataSetDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeDisplayDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadDisplayDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeDnaSampleDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadDnaSampleDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeEntityStatsDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadEntityStatsDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeExperimentDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadExperimentDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeExtractorInstructionFilesDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadExtractorInstructionFilesDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeJobDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadJobDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeLoaderFilePreviewDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadLoaderFilePreviewDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeLoaderInstructionFilesDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadLoaderInstructionFilesDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeManifestDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadManifestDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeMapsetDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadMapsetDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeMarkerDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadMarkerDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeMarkerGroupDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadMarkerGroupDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeNameIdDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadNameIdDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeOrganizationDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadOrganizationDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopePingDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadPingDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopePlatformDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadPlatformDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeProjectDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadProjectDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeProtocolDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadProtocolDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeReferenceDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadReferenceDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadEnvelopeRestProfileDTO:
    type: "object"
    properties:
      payload:
        $ref: "#/definitions/PayloadRestProfileDTO"
      header:
        $ref: "#/definitions/Header"
  PayloadExperimentDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ExperimentDTO"
  PayloadExtractorInstructionFilesDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ExtractorInstructionFilesDTO"
  PayloadJobDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/JobDTO"
  PayloadLoaderFilePreviewDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LoaderFilePreviewDTO"
  PayloadLoaderInstructionFilesDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LoaderInstructionFilesDTO"
  PayloadManifestDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ManifestDTO"
  PayloadMapsetDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/MapsetDTO"
  PayloadMarkerDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/MarkerDTO"
  PayloadMarkerGroupDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/MarkerGroupDTO"
  PayloadNameIdDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/NameIdDTO"
  PayloadObject:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          type: "object"
  PayloadOrganizationDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/OrganizationDTO"
  PayloadPingDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/PingDTO"
  PayloadPlatformDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/PlatformDTO"
  PayloadProjectDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ProjectDTO"
  PayloadProtocolDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ProtocolDTO"
  PayloadReferenceDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ReferenceDTO"
  PayloadRestProfileDTO:
    type: "object"
    properties:
      linkCollection:
        $ref: "#/definitions/LinkCollection"
      data:
        type: "array"
        items:
          $ref: "#/definitions/RestProfileDTO"
  PingDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      pingResponses:
        type: "array"
        items:
          type: "string"
      id:
        type: "integer"
        format: "int32"
      dbMetaData:
        type: "array"
        items:
          type: "string"
  PlatformDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      platformId:
        type: "integer"
        format: "int32"
      platformName:
        type: "string"
      platformCode:
        type: "string"
      platformDescription:
        type: "string"
      statusId:
        type: "integer"
        format: "int32"
      typeId:
        type: "integer"
        format: "int32"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/EntityPropertyDTO"
      id:
        type: "integer"
        format: "int32"
  ProjectDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      projectId:
        type: "integer"
        format: "int32"
      projectName:
        type: "string"
      projectCode:
        type: "string"
      projectDescription:
        type: "string"
      piContact:
        type: "integer"
        format: "int32"
      projectStatus:
        type: "integer"
        format: "int32"
      principleInvestigators:
        type: "object"
        additionalProperties:
          type: "string"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/EntityPropertyDTO"
      id:
        type: "integer"
        format: "int32"
  PropNameId:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
  ProtocolDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      protocolId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      typeId:
        type: "integer"
        format: "int32"
      platformId:
        type: "integer"
        format: "int32"
      status:
        type: "integer"
        format: "int32"
      props:
        type: "array"
        items:
          $ref: "#/definitions/EntityPropertyDTO"
      vendorProtocols:
        type: "array"
        items:
          $ref: "#/definitions/VendorProtocolDTO"
      id:
        type: "integer"
        format: "int32"
  ReferenceDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      entityNameType:
        type: "string"
        enum:
        - "UNKNOWN"
        - "ANALYSIS"
        - "CONTACT"
        - "DATASET"
        - "CV"
        - "CVGROUP"
        - "PROJECT"
        - "ORGANIZATION"
        - "PLATFORM"
        - "MANIFEST"
        - "MAPSET"
        - "MARKER_GROUP"
        - "EXPERIMENT"
        - "REFERENCE"
        - "ROLE"
        - "DISPLAY"
        - "MARKER"
        - "PROTOCOL"
        - "VENDOR_PROTOCOL"
        - "DNASAMPLE"
        - "LINKAGE_GROUP"
        - "DNARUN"
        - "GERMPLASM"
        - "JOB"
      createdBy:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "integer"
        format: "int32"
      modifiedDate:
        type: "string"
        format: "date-time"
      referenceId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      version:
        type: "string"
      link:
        type: "string"
      filePath:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  RestProfileDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      restResourceId:
        type: "string"
        enum:
        - "GOBII_AUTH"
        - "GOBII_PING"
        - "GOBII_PROJECTS"
        - "GOBII_GENOTYPE_CALLS"
        - "GOBII_NAME_ID_LIST_DEPRECATED"
        - "GOBII_NAMES"
        - "GOBII_FILE_LOAD"
        - "GOBII_FILE_LOAD_INSTRUCTIONS"
        - "GOBII_FILE_EXTRACTOR_INSTRUCTIONS"
        - "GOBII_FILE_EXTRACTOR_JOBS"
        - "GOBII_FILE_LOADER_JOBS"
        - "GOBII_DISPLAY"
        - "GOBII_CV"
        - "GOBII_CVGROUP"
        - "GOBII_CONTACTS"
        - "GOBII_CONTACT_SEARCH"
        - "GOBII_ORGANIZATION_SEARCH"
        - "GOBII_REFERENCE"
        - "GOBII_EXPERIMENTS"
        - "GOBII_DATASETS"
        - "GOBII_DATASETTYPES"
        - "GOBII_ANALYSIS"
        - "GOBII_MARKERGROUP"
        - "GOBII_MANIFEST"
        - "GOBII_ORGANIZATION"
        - "GOBII_PLATFORM"
        - "GOBII_MAPSET"
        - "GOBII_CONFIGSETTINGS"
        - "GOBII_ROLES"
        - "GOBII_MARKERS"
        - "GOBII_MARKER_SEARCH"
        - "GOBII_CALLS"
        - "GOBII_GERMPLASM"
        - "GOBII_OBSERVATION_VARIABLES"
        - "GOBII_PROTOCOL"
        - "GOBII_VENDORS"
        - "GOBII_FILES"
        - "GOBII_JOB"
        - "GOBII_ENTITIES"
        - "GOBII_COUNT"
        - "GOBII_LAST_MODIFIED"
        - "GOBII_VERTICES"
        - "GOBII_VALUES"
        - "GOBII_REST_PROFILES"
        - "GOBII_DNASAMPLES"
        - "GOBII_DNARUN"
        - "GOBII_LINKAGEGROUP"
        - "GOBII_JOB_DNASAMPLE"
        - "BRAPI_ALLELE_MATRIX_SEARCH"
        - "BRAPI_ALLELE_MATRIX_SEARCH_STATUS"
        - "BRAPI_ALLELE_MATRICES"
        - "KDC_START"
        - "KDC_STATUS"
        - "KDC_DOWNLOAD"
        - "KDC_PURGE"
        - "BRAPI_LOGIN"
        - "BRAPI_STUDIES_SEARCH"
        - "BRAPI_STUDIES"
        - "BRAPI_CALLS"
        - "BRAPI_MAPS_CALLS"
        - "BRAPI_CALLSETS"
      restMethodType:
        type: "string"
        enum:
        - "GET"
        - "POST"
        - "PUT"
        - "PATCH"
        - "DELETE"
        - "OPTIONS"
      templateParameter:
        type: "string"
      max:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
  ServerConfigItem:
    type: "object"
    properties:
      port:
        type: "integer"
        format: "int32"
      domain:
        type: "string"
      contextRoot:
        type: "string"
      gobiiCropType:
        type: "string"
      confidentialityNotice:
        type: "string"
      fileLocations:
        type: "object"
        additionalProperties:
          type: "string"
  Status:
    type: "object"
    properties:
      succeeded:
        type: "boolean"
      statusMessages:
        type: "array"
        items:
          $ref: "#/definitions/HeaderStatusMessage"
      statusMessagesByCode:
        type: "object"
        additionalProperties:
          type: "string"
  TableColDisplay:
    type: "object"
    properties:
      displayId:
        type: "integer"
        format: "int32"
      columnName:
        type: "string"
      displayName:
        type: "string"
      rank:
        type: "integer"
        format: "int32"
  VendorProtocolDTO:
    type: "object"
    properties:
      allowedProcessTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "CREATE"
          - "READ"
          - "UPDATE"
          - "DELETE"
          - "NONE"
      vendorProtocolId:
        type: "integer"
        format: "int32"
      organizationId:
        type: "integer"
        format: "int32"
      protocolId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      status:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
